name: Docs Search Regression

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  docs-search:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/search/requirements.txt

      - name: Restore snapshot cache
        uses: actions/cache@v4
        with:
          path: .cache/mimir
          key: mimir-cache-${{ runner.os }}-${{ hashFiles('tests/search/fixtures/snapshot_meta.json') }}

      - name: Validate datasets
        run: python scripts/validate_search_datasets.py

      - name: Run regression suite
        run: |
          pytest tests/search -m regression --embedding-config tests/search/configs/default_minilm.yaml --maxfail=1

      - name: Run conversation suite
        run: |
          pytest tests/search -m chat --embedding-config tests/search/configs/default_minilm.yaml --maxfail=1

      - name: Render metrics report
        run: |
          python scripts/render_search_report.py \
            --inputs tests/search/results/regression_default_minilm.json tests/search/results/chat_default_minilm.json \
            --baseline tests/search/baseline/default_minilm.json \
            --output tests/search/results/report.md

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs-search-results
          path: tests/search/results

      - name: Comment on pull request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        env:
          REPORT_PATH: tests/search/results/report.md
        with:
          script: |
            const fs = require('fs');
            const marker = '<!-- docs-search-report -->';
            let body = 'Docs search regression did not produce a report.';
            try {
              body = fs.readFileSync(process.env.REPORT_PATH, 'utf8');
            } catch (err) {
              body = 'Docs search regression results unavailable.';
            }
            const { context, github } = require('@actions/github');
            const issue_number = context.issue.number;
            const comments = await github.rest.issues.listComments({ ...context.repo, issue_number });
            const formatted = `## ðŸ“š Docs Search Benchmarks\n${body}\n\n${marker}`;
            const existing = comments.data.find((comment) => comment.body.includes(marker));
            if (existing) {
              await github.rest.issues.updateComment({
                ...context.repo,
                comment_id: existing.id,
                body: formatted,
              });
            } else {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number,
                body: formatted,
              });
            }
